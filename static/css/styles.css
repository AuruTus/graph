/* Заметки для всего проекта:
Переименовать названия классов в css - вернуть как было имя-класса.
Переименовать фильтр Data > NodeData
Добавить фильтр соседние узлы/полная цепочка для выбранного типа сущности
Добавить сворачивание фильтров
Добавить возможность запоминать выделенные мышкой ноды для дальшейшей фильтрации

Для упрощения работы с компонентом RecursiveCheckboxTree реализация возможности рекурсивной обработки установки статуса checked (true/false) для дочерних чекбоксов.
*/

body {
    //display: none;
    background-color: #eee;
    //color: #eee;
}

#main-menu {
    height: 51px;
}

#content {
    //padding: 15px;
    //margin: 60px 0 0 310px;
}

#side-bar {
    //border: dashed 1px green;
    //border-right: solid 1px 777;
    padding: 15px;
    //padding: 60px 0 0 15px;
    //width: 290px;
    //height: 100%;
    //position: absolute;
    //top: 0px;

    background-color: #bbb;
    //color: #eee;
}

.chord path {
  fill-opacity: .67;
  stroke: #333;
  stroke-width: .5px;
}

h3 {
    margin: 0;
}

.scene {
    //border: solid 1px green;
}

svg {
    //border: solid 1px green;
    //background-color: lightblue;
}
svg text {
    font-size: 12px;
}
svg .link {
    stroke: gray;
    stroke-opacity: .6;
}
svg .node {
    stroke: #fff;
    stroke-width: 1.5px;
    fill: steelblue;
    //r: 5;
}

.Filter ul {
    margin: 0 0 0 -30px;
    list-style: none;
}

.btn-primary {
    float: left;
}

#TimeLine {
        border: solid 1px gray;
    }
    #TimeLine svg .nodeBar {
        border: solid 4px green;
    }
        .transfers-number {
            border: solid 1px lightblue;
        }
        .month-bar {
            border: solid 1px yellow;
        }
    .month-nav {
        border: solid 4px green;
        fill: gray;
        background: gray;
    }
    #TimeLine svg g.navBar text {
        fill: #333;
        cursor: pointer;
    }
    #TimeLine svg g.navBar rect {
        cursor: pointer;
    }
    #TimeLine svg g rect.MonthBar {
        display: none;
    }

.graph {
    //border: solid gray 2px;
}
    .graph .Filter {
        //border: solid gray 2px;
        overflow: hidden;
        display: block;
        position: absolute;
        width: 350px;
        padding: 15px 0;
        background-color: lightgray;
    }
        .graph .Filter .data {
            padding: 0 15px;
        }
    .graph svg {
        margin: 0 0 0 350px;
    }
        line,
        .graph line {
            stroke: #bbb;
            stroke-width: 1px;
        }
        .graph svg .Person {
            //fill: #264294;
            fill: green;
        }
        .graph .Circle {
            stroke: #C2D6E6;
            fill: #4682B4;
        }
        .graph svg text {
            fill: #333;
            stroke: #333;
        }
        .graph svg .Circle.true,
        .graph svg .Person.true {
            fill: orange;
        }
    .graph .info {
        margin: 0 0 0 352px;
        padding: 5px;
        min-width: 500px;
        min-height: 50px;
        background-color: lightgray;
    }

.RecursiveCheckboxTree {
    padding: 5px;
}
    .RecursiveCheckboxTree div,
    .RecursiveCheckboxTree label {
        //float: left;
    }
    .RecursiveCheckboxTree .otstup {
        padding: 0 0 0 20px;
        clear: both;
    }


/* Bootstrap */
.btn-group {
    margin: 5px 0 0 5px;
}
.btn-group label {
    //margin: 5px 0 0 5px;
    //padding: 5px 10px;
    font-size: 80%;
}
input.btn {
    margin: 5px 0 0 5px;
    font-size: 80%;
}
/* /Bootstrap */


/* Leaflet */
#map { height: 380px; }
/* /Leaflet */
